Last login: Wed Jun  8 20:46:36 on console
Christines-MacBook-Pro:~ christinepogatchnik$ ls
Applications	Documents	Library		Music		Public
Desktop		Downloads	Movies		Pictures
Christines-MacBook-Pro:~ christinepogatchnik$ /Users/christinepogatchnik/Desktop/01\ PROGRAMMING/Local\ Mapping 
-bash: /Users/christinepogatchnik/Desktop/01 PROGRAMMING/Local Mapping: is a directory
Christines-MacBook-Pro:~ christinepogatchnik$ ls
Applications	Documents	Library		Music		Public
Desktop		Downloads	Movies		Pictures
Christines-MacBook-Pro:~ christinepogatchnik$ cd /Users/christinepogatchnik/Desktop/01\ PROGRAMMING/Local\ Mapping 
Christines-MacBook-Pro:Local Mapping christinepogatchnik$ ls
Christines-MacBook-Pro:Local Mapping christinepogatchnik$ git
xcode-select: note: no developer tools were found at '/Applications/Xcode.app', requesting install. Choose an option in the dialog to download the command line developer tools.
Christines-MacBook-Pro:Local Mapping christinepogatchnik$ git
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Find by binary search the change that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Forward-port local commits to the updated upstream head
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
Christines-MacBook-Pro:Local Mapping christinepogatchnik$ git clone https://github.com/kikipogo/snails.git
Cloning into 'snails'...
warning: You appear to have cloned an empty repository.
Checking connectivity... done.
Christines-MacBook-Pro:Local Mapping christinepogatchnik$ ls
snails
Christines-MacBook-Pro:Local Mapping christinepogatchnik$ git status
fatal: Not a git repository (or any of the parent directories): .git
Christines-MacBook-Pro:Local Mapping christinepogatchnik$ ls
snails
Christines-MacBook-Pro:Local Mapping christinepogatchnik$ cd snails/
Christines-MacBook-Pro:snails christinepogatchnik$ ls
stuff.rtf
Christines-MacBook-Pro:snails christinepogatchnik$ git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	stuff.rtf

nothing added to commit but untracked files present (use "git add" to track)
Christines-MacBook-Pro:snails christinepogatchnik$ git add . 
Christines-MacBook-Pro:snails christinepogatchnik$ git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   stuff.rtf

Christines-MacBook-Pro:snails christinepogatchnik$ git commit -m 'initial check stuff file'
[master (root-commit) 0446535] initial check stuff file
 Committer: Christine Pogatchnik <christinepogatchnik@Christines-MacBook-Pro.local>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 7 insertions(+)
 create mode 100644 stuff.rtf
Christines-MacBook-Pro:snails christinepogatchnik$ git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Username for 'https://github.com': keekeepogo         
Password for 'https://keekeepogo@github.com': 
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/kikipogo/snails.git/'
Christines-MacBook-Pro:snails christinepogatchnik$ git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Username for 'https://github.com': keekeepogo
Password for 'https://keekeepogo@github.com': 
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/kikipogo/snails.git/'
Christines-MacBook-Pro:snails christinepogatchnik$ git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Username for 'https://github.com': christinepogatchnik@gmail.com
Password for 'https://christinepogatchnik@gmail.com@github.com': 
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 437 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/kikipogo/snails.git
 * [new branch]      master -> master
Christines-MacBook-Pro:snails christinepogatchnik$ 
